clear all;
close all;

% Specify environment and case-specific data directories
curPCname = getenv('COMPUTERNAME');

switch curPCname
    case 'DESKTOP-I5CPDO7'  % PC_1
        IO_DataDir = 'X:\RadcliffeE\Thesis_PD Neuro-correlated Kinematics\Data\Intraoperative';
    case 'DSKTP-JTLAB-EMR'  % Lab Desktop
        IO_DataDir = 'Z:\RadcliffeE\Thesis_PD Neuro-correlated Kinematics\Data\Intraoperative';
    case 'NSG-M-H8J3X34'    % PC_2
        IO_DataDir = 'Z:\RadcliffeE\Thesis_PD Neuro-correlated Kinematics\Data\Intraoperative';
end

% On Digital Storm Machine only (Lab Desktop)
DLC_projectDir = 'C:\Users\erinr\Desktop';
DLC_videosDir = [DLC_projectDir, filesep, 'DLC_videos'];

cd(DLC_projectDir)

% Where is the case-specific DLC project folder?
% projectdir = ['C:\Users\RexBoxOne\Desktop\DLCs\' subjcode '_3D_Ross\'];
DLC_foldname = 'IO_2023-04-13_LSTN-kg-2025-04-17\';
projectdir = [DLC_projectDir, filesep, DLC_foldname];

% find the actual project folder
% foldname = dir([projectdir subjcode '-*-*-*-*']);
% if length(foldname) > 1
%     error('Uh oh more than one project folder!');
% elseif isempty(foldname)
%     error('Uh oh can''t find project folder!');
% end
dlcdir = [projectdir '\'];
dlcdirstr = strrep(dlcdir(1:end-1), '\', '\\');


% Get current date
[y, m, d] = ymd(datetime);
datestr = [num2str(y) '-' num2str(m,'%0.2i') '-' num2str(d,'%0.2i')];

% Make the anipose folder and subfolders
if ~exist([projectdir 'anipose'],'dir')
    aniposedir = [projectdir 'anipose\' datestr '\'];
    mkdir(aniposedir);
else % Look for a date folder, if it doesn't exist, make it
    foldname = dir([projectdir 'anipose\*-*-*']);
    if length(foldname) > 1
        error('Uh oh too many anipose inner project folders');
    elseif isempty(foldname)
        aniposedir = [projectdir 'anipose\' datestr '\'];
        mkdir(aniposedir);
    else
        aniposedir = [projectdir 'anipose\' foldname(1).name '\'];
    end
end

% Make the config.toml
% Make "labeling scheme"
% if contains(subjcode,'PRT')
%     lscheme = ['scheme = [\n'...
%         '  ["frontTopLeft", "cameraCenter"],\n'...
%         '  ["frontBottomLeft", "cameraCenter"],\n'...
%         '  ["frontTopRight", "cameraCenter"],\n'...
%         '  ["frontBottomRight", "cameraCenter"],\n'...
%         ']\n'];
% elseif contains(subjcode,'PD') || contains(subjcode,'GP') || contains(subjcode,'VM')
%     lscheme = ['scheme = [\n'...
%         '  ["fingerTip2", "stablePoint"]\n'...
%         ']\n'];
% end
% modify skeleton
lscheme = ['scheme = [\n'...
    '  ["PalmBase", "MCP1"],\n'...
    '  ["PalmBase", "MCP2"],\n'...
    '  ["PalmBase", "MCP3"],\n'...
    '  ["PalmBase", "MCP4"],\n'...
    '  ["PalmBase", "MCP5"],\n'...
    '  ["MCP1", "fTip1"]\n'...
    '  ["MCP2", "fTip2"]\n'...
    '  ["MCP3", "fTip3"]\n'...
    '  ["MCP4", "fTip4"]\n'...
    '  ["MCP5", "fTip5"]\n'...
    '  ["PalmBase", "fTip1"],\n'...
    '  ["PalmBase", "fTip2"],\n'...
    '  ["PalmBase", "fTip3"],\n'...
    '  ["PalmBase", "fTip4"],\n'...
    '  ["PalmBase", "fTip5"],\n'...
    '  ["PalmBase", "MidForeArm"],\n'...
    '  ["MidForeArm", "Elbow"],\n'...
    ']\n'];


cfid = fopen([projectdir 'anipose\config.toml'], 'w');
fprintf(cfid,['# Project name\n'...
'project = "dbspose"\n'...
'\n'...
'# Change this to match deeplabcut folder (one with trained network)\n'...
'model_folder = ''' dlcdirstr '''\n'...
'\n'...
'video_extension = "mp4"\n'...
'\n'...
'# How many folders are nested in structure?\n'...
'nesting = 1\n'...
'\n'...
'[pipeline]\n'...
'videos_raw = "videos-raw" # change this if you''d like to change name of "videos-raw" folder\n'...
'\n'...
'# labeling scheme...specify lines that you want to draw for visualizing labels in videos\n'...
'[labeling]\n'...
lscheme ...
'\n'...
'# Settings for a threshold filter\n'...
'# Removes data outside threshold (probably errors in tracking), and interpolates\n'...
'[filter]\n'...
'enabled = true\n'...
'medfilt = 13 # length of median filter\n'...
'offset_threshold = 25 # offset from median filter to count as jump\n'...
'score_threshold = 0.8 # score below which to count as bad\n'...
'spline = true # interpolate using cubic spline instead of linear\n'...
'\n'...
'[triangulation]\n'...
'cam_regex = ''(front|side)Cam''\n'...
'optim = false\n'...
'\n'...
'[calibration]\n'...
'# checkerboard / charuco / aruco\n'...
'board_type = "checkerboard"\n'...
'\n'...
'# width and height of grid\n'...
'board_size = [9, 6]\n'...
'\n'...
'# If charuco or checkerboard, square side length\n'...
'board_square_side_length = 25.4 # mm\n'...
'\n'...% 'calibration_init = ''PD22Calibration.toml''\n'...
'\n'...
'[manual_verification]\n'...
'# true / false\n'...
'manually_verify = false\n']);
fclose(cfid);

% xfer the videos
if exist([aniposedir 'videos-raw\'], 'dir')
    rmdir([aniposedir 'videos-raw\'],'s');
end
mkdir([aniposedir 'videos-raw\']);
vidnames = dir([dlcdir 'videos\*Cam-0000.mp4']); % check filename format
nvids = length(vidnames);
for vidi = 1:nvids
    copyfile([dlcdir 'videos\' vidnames(vidi).name], [aniposedir 'videos-raw\' vidnames(vidi).name]);
end

% make pose-2d and xfer
if exist([aniposedir 'pose-2d\'], 'dir')
    rmdir([aniposedir 'pose-2d\'],'s');
end
mkdir([aniposedir 'pose-2d\']);
for vidi = 1:nvids
    rootname = vidnames(vidi).name(1:end-4);
    % Find the h5 file
    h5s = dir([dlcdir 'videos\' rootname '*.h5']);
    copyfile([dlcdir 'videos\' h5s(1).name], [aniposedir 'pose-2d\' rootname '.h5']);
    % Find the pickle file
    pickles = dir([dlcdir 'videos\' rootname '*meta.pickle']);
    copyfile([dlcdir 'videos\' pickles(1).name], [aniposedir 'pose-2d\' rootname '.pickle']);
    % Find the csv file
    csvs = dir([dlcdir 'videos\' rootname '*.csv']);
    copyfile([dlcdir 'videos\' csvs(1).name], [aniposedir 'pose-2d\' rootname '.csv']);
end

% make calibration folder. Going to have to populate it yourself
if ~exist([aniposedir 'calibration\'], 'dir')
    mkdir([aniposedir 'calibration\']);
end

% specific to Rex's env:
% % Actually populate the calibration folder too
% synviddir = [syndir 'Video\' subjcode '_Compressed_Video\' subjcode '_board\'];
% sessfolds = dir([synviddir 'session*']);
% for sessi = 1:length(sessfolds)
%     bvids = dir([synviddir sessfolds(sessi).name '\*.mp4']);
%     for bvidi = 1:length(bvids)
%         copyfile([synviddir sessfolds(sessi).name '\' bvids(bvidi).name], [aniposedir 'calibration\' bvids(bvidi).name]);
%     end
% end

% get PD22 init calibration and transfer, if we are using it
% copyfile('C:\Users\RexBoxOne\Desktop\DLCs\PD22_3D\anipose\2025-04-19\calibration\calibration.toml', [projectdir 'anipose\PD22Calibration.toml']);